worker_processes 4;
pid /var/run/nginx.pid;

events {
  worker_connections 768;
}

http {

  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 60;
  types_hash_max_size 2048;
  server_tokens off;

  large_client_header_buffers 6 10k;

  include /opt/local/etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # Logging Settings
  ##
  log_format    main  '$remote_addr - $remote_user $server_name [$time_local] $request '
                      '"$status" $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$upstream_addr" "$upstream_response_time" "$http_x_forwarded_for" "$http_True_Client_IP"';
  
  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log;

  ##
  # Gzip Settings
  ##

  gzip on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_proxied off;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  ##
  # Thin Proxy Config
  ##

  upstream thin_cluster {
    least_conn;
    server unix:/tmp/thin.core.0.sock max_fails=0;
    server unix:/tmp/thin.core.1.sock max_fails=0;
    server unix:/tmp/thin.core.2.sock max_fails=0;
    server unix:/tmp/thin.core.3.sock max_fails=0;

    # When it is time for the thin to GC it fails the health check which marks the server as down

    # http://tengine.taobao.org/document/http_upstream_check.html
    check interval=1000 rise=1 fall=1 timeout=500 type=http;
    check_http_send "GET /gc_health_check HTTP/1.0\r\n\r\n";
    check_http_expect_alive http_2xx;
  }
  
  server {
    listen       80;
    server_name  test.com;

    root /product/core/current/public;

    location / {
      proxy_redirect off;

      if (!-f $request_filename) {
        proxy_pass http://thin_cluster;
        break;
      }
    }
  } #End Thin Proxy Config
}
